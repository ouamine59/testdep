
security:
    password_hashers:
        App\Entity\User:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/api/login
            stateless: true
            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern: ^/api
            stateless: true
            jwt: ~
    access_control:
        # ADMIN
        - { path: ^/api/users/:id, roles: ROLE_ADMIN }
        - { path: ^/api/ads/admin/detail/:id, roles: ROLE_ADMIN }
        - { path: ^/api/ads/verified/:adsId, roles: ROLE_ADMIN }
        - { path: ^/api/ads/admin/listing ,       roles: ROLE_ADMIN }
        - { path: ^/api/ads/:adsId ,       roles: ROLE_ADMIN }
        
        - { path: ^/api/user/admin/delete/:id,       roles: ROLE_ADMIN }
        # USER
        - { path: ^/api/user/update/:id, roles: ROLE_USER }
        - { path: ^/api/user/delete/:id, roles: ROLE_USER }
        - { path: ^/api/ads/reporting/:adsId/:userId, roles: ROLE_USER }
        - { path: ^/api/ads/create, roles: ROLE_USER }
        - { path: ^/api/ads/delete/:adsId/:userId, roles: ROLE_USER }
        - { path: ^/api/user/favorite-ads/:adsId/:userId, roles: ROLE_USER }
        # Public Access
        - { path: ^/$, roles: PUBLIC_ACCESS }
        - { path: ^/docs, roles: PUBLIC_ACCESS }
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/user/register, roles: PUBLIC_ACCESS }